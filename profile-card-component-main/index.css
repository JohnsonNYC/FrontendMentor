/* QUESTIONS
    Difference between Block element and Inline
    Difference between display inline, inline-block, block

    Best unit of measurement for responsiveness?
    How to center child element with respect to parent element using position attribute?
    What is the transform attribute and the translate function for centering?
    How to have svg element fill it's div container

*/

/* D I S P L A Y   A T T R I B U T E 
Block-level Elements: 
    A block-level element always starts on a new line and takes up the full width available 
    (stretches out to the left and right as far as it can).

    <div> DIVS ARE BLOCK LEVEL ELEMENTS USED TO WRAP SECTIONS OF A DOCUMENT</div>

Inline Elements
    An inline element does not start on a new line and it only takes up as much width as necessary.

    <span> SPANS ARE INLINE LEVEL ELEMENTS USED TO WRAP SMALL PORTIONS OF TEXT, IMAGES, ETX</span>

    Resource: https://css-tricks.com/when-do-you-use-inline-block/
    Resource: https://www.w3schools.com/css/tryit.asp?filename=trycss_inline-block_span1
    div {
        display: inline;        /* Displays an element as an inline element. Any height and width properties will have no effect.
        display: inline-block;  /* Displays an element as an inline-level block container. You CAN set height and width values.
        display: block;         /* Displays an element as a block element. Starts on a new line and takes up the whole width
        display: run-in;        /* Not particularly well supported or common
        display: none;          /* Hide
    }
    ** An inline element cannot contain a block-level element!
*/


/* WIDTH AND HEIGHT FOR RESPONSIVENESSS
    Using Percentage for width and height make the website responsive
*/

/* POSTION ATTRIBUTE RULES
    So there are 5 main values of the Position Property:
    
    position: static | relative | absolute | fixed | sticky
    
    and additional properties for setting the coordinates of an element (I call them “helper properties”):
    
    top | right | bottom | left AND the z-index

    Resource: https://medium.com/@leannezhang/difference-between-css-position-absolute-versus-relative-35f064384c6
*/


/* HOW TO CENTER BOTH VERTICALLY AND HORIZONTALLY
    RESOURCE: https://www.freecodecamp.org/news/how-to-center-anything-with-css-align-a-div-text-and-more/
How to Center Both Vertically and Horizontally
How to Center a Div Vertically and Horizontally with CSS Absolute Positioning and Negative Margins
This is very similar to the method above to center an element vertically. Like last time, you must know the width and height of the element you want to center.

Set the display property of the parent element to relative.

Then set the child's display property to absolute, top to 50%, and left to 50%. This just centers the top left corner of the child element vertically and horizontally.

To truly center the child element, apply a negative top margin set to half the child element's height, and a negative left margin set to half the child element's width:
*/

/* TRANSLATE ATTRIBUTE
    This transform function moves an element sideways, or up and down.
*/

body {
    background-color: gray;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* S V G  T O P B O X */
.box{
    /*Position*/
    display: inline-block;
    position: relative;
    /*Shape, Size, and Color of span*/
    width: 24%;
    height: 140px;
}

/* I M A G E   C O N T A I N E R */
.box span{
    display: block;
    position: relative;
    width: 140px;
    height: 140px;

    /*Orientation on Page*/
    left: 30%;
    top: 50%;
}

/* I M A G E   E L E M E N T */
.bio-photo {
    display: block; 
    
    /* Center vertically and horizontally */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    /*Photo shape and size*/
    border-radius: 50%; 
    width: 70%;
    height: auto;
    border: 5px solid #fefefe;
} 

/*S E C O N D   B O X   */
.box2{
    display: inline-block;
    position: absolute;
    /*Z-index places this behind other elements*/
    z-index: -10;
    /*Closes the gap between the first and second div*/
    margin-top: -75px;

    /* vertical-align: top; */

    width: 100%;
    height: 300px;
    /* background-color: #fefefe; */
    border-bottom-left-radius: 15px;
    border-bottom-right-radius: 15px;
}

svg{
    position:absolute;
    width: 100%;
    height: 100%;
    border-top-left-radius: 15px;
    border-top-right-radius: 15px;
}

.card-info{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;

    /* background-color: plum; */
}